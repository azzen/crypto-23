from hashlib import sha256
from Crypto.Util.number import bytes_to_long, long_to_bytes
from sage.all import *

# Public parameters

g = 9988093104124836929821219652161484671778871049637848440100954753975916524981257348770336925828354206427519845762123484707079823703808562050731593582207642978040383969904573800439055628786760933362095123545385058145768772293687679563597352518956044276031540877806902255760170007260409006193425951065697636760289507532134399733322923810506953462631658167747239549644388807259712698818954695217238396787917180391517604868830464544058305367557425961507553460030030641298749554788465809285847456473899107620551223139966452975230346223408347545575076229803621424903412626322204166510804602344791178829777715417423594926458
p = 21511063408803770591064858213520272403582432641732273845199384736833839154910014213133974960610638292204208326559541474203653911049243651933841812270862548654868457793199013640401139361205273453521618090005724653103603815177144877607899476668356597432636730997769303866282307068936937004358310429137961991911041446064918217741356276043442425572225213128115837776850368151674457676078648710924466543666020091474016886179160860563200495023078990448732050979725472052257795376336281210061669367706971018541295654370173321390372357981604791620557352220089949887058663745605668582474468053649714187061847635659126492067787

def hash_to_Zp(m, p):
    """This function hashes a message to an integer in Z_p"""
    F = Integers(p)
    return F(int(sha256(m).hexdigest(),16))

def sign(m, a, p, g):
    s = 0
    r = 0
    F = Integers(p)
    while s == 0 or r == 0:
        k = F.random_element()
        r = F(k * g)
        h = hash_to_Zp(m, p)
        s = F((h + a * r) * inverse_mod(k, p))
    return (r, s)

def verify(m, s, r, A, p, g):
    F = Integers(p)
    h = hash_to_Zp(m, p)
    s_inv = inverse_mod(s, p)
    u1 = F(h * s_inv * g)
    u2 = F(r * s_inv * A)
    return F(u1 + u2) == r

###### DSA

Fp = Integers(p)

# Test verify 
m = b"Please send 2000CHF to Account ABCDEFG"
A = Fp(10424823840023752040985503394065764112321832947673236121456008232209204059534575775667408097821466395244153135925974489366267253249110311789688548987184750172516918948829956531899620772325888885816820278394892673327869856003551458215816310125600713104395841339015693058398969425287243944380746793614020210594432920780456961118904040235646247822273853209643572492715888029424993090656253653758418018811660346555893548558388868697601107844437613610020947611130769357699157973598808173540717511771633573804937043918437901464089752284100199142598311778918471805904390047569299026069567996866843917350194202803923246311589)
r = 4206074636729751672765484073816701421643019853338299225471882409872558720253159308210964742608743949987602301960705490810844740567328208284156516510963855997103915296694235047610712865215231615936645606640831816271210034674955245006095332347920999875685829784660039178091477414617545993478652758613998275471522311969738581380421076075157937483141715844876164002560295394131883947900810158471653710762773417513267390703056108490517064317046775581187160959693595520078921297807261990915272828403752855006020829312236254643457403498412710975189351144600287088243353487869765478544631720671029465709774830583247307053392
s = 6890648275941462781380847232410313024340451085911143902820755126481632652237726028765474001288612874354467762718092814408781692578136691348610450670128146907483866109400382071316749714310904328628617601299895733163796169088777358691263663167134367308347794752801617110913112350738819537524449334844626297739109628713829039579385255166711038451642460316349104268466165407301358045426289726018158068947985536850321958255464977561689446457634671845314120206702927587453652727285577051795748354288797377964468018304804019723177774528720400229937670176031000074712646853107510613731752371506995111082715672428944552737160
print(f"Authentic signature: {verify(m, s, r, A, p, g)}")

# Attack
m = "Please send 100000CHF to Rayane Annen".encode('utf8')
a = Fp(A/g)
(r,s) = sign(m, a, p, g)
print(f"Authentic signature with retrieved private key: {verify(m, s, r, A, p, g)}")
